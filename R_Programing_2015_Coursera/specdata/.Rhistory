}
for(i in 1:lenght(x)){
print(i)
}
for(i in 1:4(x)){
print(i)
}
for(i in 1:4(x)){
print(x(i)
}
for(i in 1:4(x)){
print(x(i))
}
for(i in 1:4(x)){
print(x(i))
}
for(i in 1:lenght(x)){
print(x(i))
}
for(i in seq_along(x)){
print(x(i))
}
for(i in seq_along(x)) {
print(x(i))
}
for(i in 1:len(x)) {
print(x(i))
}
for(i in 1:length(x)) {
print(x(i))
}
for(i in 1:length(x)){
print(x(i))
}
for(i in 1:length(x)){
print(i)
}
for(i in 1:length(x)){
print(x[1])
}
for(i in seq_along(x)){
print(x[1])
}
add<-function(x,y){
x+y
}
add(7,8)
add(7,80)
add<-function(x,y){
x+y
}
above10<-function(x){
if(x=>10){
print(x)
else {
print("BAD")
}
}
}
add<-function(x,y){
x+y
}
above10<-function(x){
if(x=>10){
print(x)
else {
print("BAD")
}}}
add<-function(x,y){
x+y
}
above10<-function(x){
if(x=>10)
print(x)
else
print("BAD")
}
add<-function(x,y){
x+y
}
above10<-function(x){
if(x=>10)
print(x)
}
above10<-function(x){
if(x=>10)
print(x)
}
add<-function(x,y){
x+y
}
above10<-function(x){
use<-x>10
}
setwd("Desktop//Coursera_R_Programing")
ls()
ls()
source("submitscript1.R")
submit()
source("submitscript1.R")
setwd("")
setwd("..")
source("submitscript1.R")
submit()
source("submitscript1.R")
setwd("..")
source("submitscript1.R")
files<-list.files(, full.names = T) #gets all the files in the directory
files_subset<-files[id] #subsets the files using the info from id in the function
dat<-data.frame() #creates an empty dataframe
for (i in 1:length(files_subset)) {
dat <- rbind(dat, read.csv(files_subset[i]))
files_subset_complete<-dat[complete.cases(dat),]
} #using a for loop, reads the subseted csv files and appends them in the empty dataframe
xx<-count(files_subset_complete,"ID")
colnames(xx) <- c("id", "nobs")
xx
}
files<-list.files(, full.names = T) #gets all the files in the directory
files_subset<-files[id] #subsets the files using the info from id in the function
id<-c(2, 4, 8, 10, 12)
files_subset<-files[id] #subsets the files using the info from id in the function
dat<-data.frame() #creates an empty dataframe
for (i in 1:length(files_subset)) {
dat <- rbind(dat, read.csv(files_subset[i]))
files_subset_complete<-dat[complete.cases(dat),]
} #using a for loop, reads the subseted csv files and appends them in the empty dataframe
xx<-count(files_subset_complete,"ID")
colnames(xx) <- c("id", "nobs")
xx
}
for (i in 1:length(files_subset)) {
dat <- rbind(dat, read.csv(files_subset[i]))
files_subset_complete<-dat[complete.cases(dat),]
} #using a f
xx<-count(files_subset_complete,"ID")
for (i in 1:length(files_subset)) {
dat <- rbind(dat, read.csv(files_subset[i]))
files_subset_complete<-dat[complete.cases(dat),]
} #us
setwd(dir ="specdata/")
files<-list.files(, full.names = T) #gets all the files in the directory
files_subset<-files[id] #subsets the files using the info from id in the function
dat<-data.frame() #creates an empty dataframe
for (i in 1:length(files_subset)) {
dat <- rbind(dat, read.csv(files_subset[i]))
files_subset_complete<-dat[complete.cases(dat),]
} #using a for loop, reads the subseted csv files and appends them in the empty dataframe
xx<-count(files_subset_complete,"ID")
colnames(xx) <- c("id", "nobs")
xx
id<-30:25
files_subset<-files[id] #subsets the files using the info from id in the function
dat<-data.frame() #creates an empty dataframe
for (i in 1:length(files_subset)) {
dat <- rbind(dat, read.csv(files_subset[i]))
files_subset_complete<-dat[complete.cases(dat),]
} #using a for loop, reads the subseted csv files and appends them in the empty dataframe
xx<-count(files_subset_complete,"ID")
colnames(xx) <- c("id", "nobs")
xx
table(files_subset_complete)
table(dat)
as.data.frame(table(files_subset_complete))
count(files_subset_complete, "ID")
count(files_subset_complete, "ID", wt_var = "g")
id
count(files_subset_complete, "ID", id)
count(files_subset_complete, "ID" id)
count(files_subset_complete, "ID", id)
count(files_subset_complete, "ID", vars = id)
head(files_subset_complete)
count(files_subset_complete, "Date", "ID")
head(count(files_subset_complete, "Date", "ID"))
xx<-count(files_subset_complete,"Date", "ID")
colnames(xx) <- c("id", "nobs")
xx
}
xx<-count(files_subset_complete,"Date", "ID")
colnames(xx) <- c("id", "nobs")
xx
xx[id]
xx[,id]
xx[,"ID"==id]
xx[,"ID"]
xx[,"ID"]==id
xx[,"ID"]
xx[,]
xx[ID,]
xx[,ID]
xx[,id]
xx[,ID]
xx[,"ID"]
head(xx)
xx[,"nobs"]
xx[,"nobs"]==id
xx[,"nobs"==id]
head(xx)
xx
id
id<-1
files<-list.files(, full.names = T) #gets all the files in the directory
files_subset<-files[id] #subsets the files using the info from id in the function
dat<-data.frame() #creates an empty dataframe
for (i in 1:length(files_subset)) {
dat <- rbind(dat, read.csv(files_subset[i]))
files_subset_complete<-dat[complete.cases(dat),]
} #using a for loop, reads the subseted csv files and appends them in the empty dataframe
xx<-count(files_subset_complete,"Date", "ID")
colnames(xx) <- c("id", "nobs")
xx
xx<-count(files_subset_complete,"Date", "ID")
xx
xx<-count(files_subset_complete,"ID")
colnames(xx) <- c("id", "nobs")
xx
id<-30:25
files_subset<-files[id] #subsets the files using the info from id in the function
dat<-data.frame() #creates an empty dataframe
for (i in 1:length(files_subset)) {
dat <- rbind(dat, read.csv(files_subset[i]))
files_subset_complete<-dat[complete.cases(dat),]
} #using a for loop, reads the subseted csv files and appends them in the empty dataframe
xx<-count(files_subset_complete,"ID")
colnames(xx) <- c("id", "nobs")
xx
order(xx,decreasing = F)
order(xx,decreasing = T)
order(xx)
z<-order(xx,decreasing = T)
z
xx
class(x)
class(xx)
z<-xx[order(xx),]
z
z<-xx[order(xx,decreasing = T),]
z
z<-xx[order(xx,decreasing = T),]
sort.list(xx)
zz<-na.rm(z)
rm.na
zz<-complete.cases(z)
zz
na.omit(z)
z<-xx[order(xx,decreasing = T),]
z
z<-xx[na.omit(order(xx,decreasing = T),)]
z<-xx[order(xx,decreasing = T),]
z
complete <- function(directory, id) {
library(plyr)
setwd(directory) #sets directory using info from directory in the function
files<-list.files(, full.names = T) #gets all the files in the directory
files_subset<-files[id] #subsets the files using the info from id in the function
dat<-data.frame() #creates an empty dataframe
for (i in 1:length(files_subset)) {
dat <- rbind(dat, read.csv(files_subset[i]))
files_subset_complete<-dat[complete.cases(dat),]
} #using a for loop, reads the subseted csv files and appends them in the empty dataframe
xx<-count(files_subset_complete,"ID")
colnames(xx) <- c("id", "nobs")
xx
z<-xx[order(xx,decreasing = T),]
zz<-complete.cases(z)
zz
}
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
zz<-complete.cases(z)
complete("",30:25)
complete(".",30:25)
na.omit(z)
complete <- function(directory, id) {
library(plyr)
setwd(directory) #sets directory using info from directory in the function
files<-list.files(, full.names = T) #gets all the files in the directory
files_subset<-files[id] #subsets the files using the info from id in the function
dat<-data.frame() #creates an empty dataframe
for (i in 1:length(files_subset)) {
dat <- rbind(dat, read.csv(files_subset[i]))
files_subset_complete<-dat[complete.cases(dat),]
} #using a for loop, reads the subseted csv files and appends them in the empty dataframe
xx<-count(files_subset_complete,"ID")
colnames(xx) <- c("id", "nobs")
xx
z<-xx[order(xx,decreasing = T),]
zz<-na.omit(z)
zz
}
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
complete(".",30:25)
setwd(..)
setwd("..")
source("submitscript1.R")
submit()
submit()
setwd("..")
submit()
setwd("..")
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
setwd("..")
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 150)
setwd(..)
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
setwd(directory)
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
setwd("..")
cr<-corr(directory = "specdata/",150)
install.packages('dplyr', dependencies = T)
setwd("..")
source("submitscript1.R")
submit()
## Part 2
complete <- function(directory, id){
## Read them all in at the same time
file_list <- dir(directory)
dat_all <- lapply(file_list[id], function(x)
read.csv(paste(directory, x, sep="/")))
comp <- sapply(dat_all, count_complete)
data.frame(id=id, nobs=comp)
}
count_complete <- function(df)
nrow(na.omit(df))
complete(directory = "specdata/", 35:20)
submit()
submit()
submit()
## Part 3
## Reuse count_complete
corr <- function(directory, threshold=0){
## Read them all in at the same time
file_list <- dir(directory)
dat_all <- lapply(file_list, function(x)
read.csv(paste(directory, x, sep="/")))
comp <- sapply(dat_all, count_complete)
## above threshold
above_cut <- which(comp > threshold)
## Do correlations across only the elements above the threshold
## Check if any are greater than threshold
if (length(above_cut) != 0){
res <- dat_all[above_cut]
out <- sapply(res, function(x)
cor(x$nitrate, x$sulfate, use="complete.obs"))
return(out)
} else {
return(vector())
}
}
corr(directory = "specdata/",150)
vector()
vector
submit()
submit()
submit()
?count_complete
count_complete
df
setwd("specdata/")
file_list <- dir(directory)
file_list<-list.files(, full.names = T)
dat_all <- lapply(file_list[id], function(x)
read.csv(paste(directory, x, sep="/")))
getwd
getwd()
directory<-"/Users/SAI/Desktop/Coursera_R_Programing/specdata"
file_list<-list.files(, full.names = T)
dat_all <- lapply(file_list[id], function(x)
read.csv(paste(directory, x, sep="/")))
dat_all
comp <- sapply(dat_all, count_complete)
comp
nrow(na.omit(df))
count_complete <- function(df)
nrow(na.omit(df))
